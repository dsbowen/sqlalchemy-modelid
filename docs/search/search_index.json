{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"SQLAlchemy-ModelID SQLAlchemy-ModelID provides a base for SQLAlchemy models with a model_id property. This conveniently distinguishes between models with the same primary key but from different tables. Installation $ pip install sqlalchemy-modelid Quickstart from sqlalchemy_modelid import ModelIdBase # standard session creation from sqlalchemy import create_engine, Column, Integer from sqlalchemy.ext.declarative import declarative_base from sqlalchemy.orm import sessionmaker, scoped_session engine = create_engine('sqlite:///:memory:') session_factory = sessionmaker(bind=engine) Session = scoped_session(session_factory) session = Session() Base = declarative_base() # subclass `ModelIdBase` to add a `model_id` property to any model class Model(ModelIdBase, Base): __tablename__ = 'model' id = Column(Integer, primary_key=True) # create the database Base.metadata.create_all(engine) # example my_model = Model() session.add(my_model) session.commit() my_model.model_id Out: model-1 Citation @software{bowen2020sqlalchemy-modelid, author = {Dillon Bowen}, title = {SQLAlchemy-ModelID}, url = {https://dsbowen.github.io/sqlalchemy-modelid/}, date = {2020-06-05}, } License Users must cite this package in any publications which use it. It is licensed with the MIT License .","title":"Home"},{"location":"#sqlalchemy-modelid","text":"SQLAlchemy-ModelID provides a base for SQLAlchemy models with a model_id property. This conveniently distinguishes between models with the same primary key but from different tables.","title":"SQLAlchemy-ModelID"},{"location":"#installation","text":"$ pip install sqlalchemy-modelid","title":"Installation"},{"location":"#quickstart","text":"from sqlalchemy_modelid import ModelIdBase # standard session creation from sqlalchemy import create_engine, Column, Integer from sqlalchemy.ext.declarative import declarative_base from sqlalchemy.orm import sessionmaker, scoped_session engine = create_engine('sqlite:///:memory:') session_factory = sessionmaker(bind=engine) Session = scoped_session(session_factory) session = Session() Base = declarative_base() # subclass `ModelIdBase` to add a `model_id` property to any model class Model(ModelIdBase, Base): __tablename__ = 'model' id = Column(Integer, primary_key=True) # create the database Base.metadata.create_all(engine) # example my_model = Model() session.add(my_model) session.commit() my_model.model_id Out: model-1","title":"Quickstart"},{"location":"#citation","text":"@software{bowen2020sqlalchemy-modelid, author = {Dillon Bowen}, title = {SQLAlchemy-ModelID}, url = {https://dsbowen.github.io/sqlalchemy-modelid/}, date = {2020-06-05}, }","title":"Citation"},{"location":"#license","text":"Users must cite this package in any publications which use it. It is licensed with the MIT License .","title":"License"},{"location":"use/","text":"a.src-href { float: right; } p.attr { margin-top: 0.5em; margin-left: 1em; } p.func-header { background-color: gainsboro; border-radius: 0.1em; padding: 0.5em; padding-left: 1em; } table.field-table { border-radius: 0.1em } Model ID base for SQLAlchemy models sqlalchemy_modelid. ModelIdBase A base for SQLAlchemy models with a model_id property. The model_id is similar to a primary key, but prefixed by the model type. This distinguishes it from other objects with the same primary key value belonging to other tables. Attributes: model_id : str","title":"Use"},{"location":"use/#model-id-base-for-sqlalchemy-models","text":"","title":"Model ID base for SQLAlchemy models"},{"location":"use/#sqlalchemy_modelidmodelidbase","text":"A base for SQLAlchemy models with a model_id property. The model_id is similar to a primary key, but prefixed by the model type. This distinguishes it from other objects with the same primary key value belonging to other tables. Attributes: model_id : str","title":"sqlalchemy_modelid.ModelIdBase"}]}